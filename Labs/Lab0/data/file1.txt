The BGP protocol is a critical component of the Internet infrastructure for exchanging routing information, consisting of IP-prefixes, between distinct independent entities. These entities often make use of an RS located at an IXP’s to facilitate this exchange of information. Network devices processing BGP information must be highly optimized performance wise in order to be able to process any incoming information in real time. One of the leading open-source alternatives that implements the BGP protocol is Free Range Routing (FRR), resulting in that it is of interest of understanding the potential limitations of FRR to ensure a well functioning Internet.
This research has performed a set of benchmarks with the purpose of revealing potential limi- tations in how FRR performs regarding the number of prefixes it is capable of processing in a time span of 180 seconds. The benchmarking methodology consisted of configuring FRR as an RS where it received prefixes from a set of peers each of which simulating a distinct entity. Simultaneously, FRR processed the set of received prefixes in order to announce them on the network to all of its connected peers. The results shows that FRR has limitations when it comes to announcing prefixes on the network. Specifically, the amount of received prefixes, during the benchmark, was consistently several magnitudes higher than the amount of prefixes that FRR was capable of an- nouncing on the network to its peers. This shows that there exists a bottleneck in the performance of FRR. However, one can question what potential consequences this limitation may result in since our research shows that FRR, in our benchmarks, announced more prefixes than what an average IXP’s RS holds in its master routing table [27]. This means that, although FRR may not be able to announce prefixes at the same rate as it receives them from its peers, there should not be any problems regarding announcing an average sized routing table in a few minutes time.
For future research purposes, one should consider developing a more realistic benchmarking en- vironment that, instead of relying on emulated peers and virtual switches, makes use of several FRR instances. Another direction is to improve the benchmarking methodology regarding how the number of received and announced prefixes is recorded. Here we suggest to make use of techniques such as software tracing which offers deeper insight regarding the program flow of the FRR software suite. Lastly, there exists a wide variety of potential configurations that may be more challenging for FRR to handle, one such dimension is to configure FRR to examine the AS-path of each prefix received and take action accordingly to a set of rules.